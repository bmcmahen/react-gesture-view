/** Icons generated by create-react-icons. Don't edit this file directly. **/
import * as React from "react";
import PropTypes from "prop-types";

interface IconProps extends React.SVGAttributes<SVGElement> {
  size?: number | string;
  color?: string;
}

export const IconPhotos: React.FunctionComponent<IconProps> = ({
  color = "currentColor",
  size = 24,
  ...other
}) => {
  return (
    <svg
      viewBox="0 0 60 76"
      version="1.1"
      height={size}
      width={size}
      {...other}
    >
      <title>Photos</title>
      <desc>Created with Sketch.</desc>
      <defs>
        <path
          d="M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z"
          id="path-1"
        />
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-3"
        >
          <stop offset="0%" stopColor="#F26568" />
          <stop offset="100%" stopColor="#F37D4F" />
        </linearGradient>
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-4"
        >
          <stop offset="0%" stopColor="#F89B35" />
          <stop offset="100%" stopColor="#FEC229" />
        </linearGradient>
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-5"
        >
          <stop offset="0%" stopColor="#FFE836" />
          <stop offset="100%" stopColor="#DFDD31" />
        </linearGradient>
        <linearGradient
          x1="100%"
          y1="50%"
          x2="0%"
          y2="50%"
          id="linearGradient-6"
        >
          <stop offset="0%" stopColor="#C7DB43" />
          <stop offset="100%" stopColor="#96CC6A" />
        </linearGradient>
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-7"
        >
          <stop offset="0%" stopColor="#6AC385" />
          <stop offset="100%" stopColor="#6ABABC" />
        </linearGradient>
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-8"
        >
          <stop offset="0%" stopColor="#87A1D3" />
          <stop offset="100%" stopColor="#69B7E5" />
        </linearGradient>
        <linearGradient
          x1="50%"
          y1="0%"
          x2="50%"
          y2="100%"
          id="linearGradient-9"
        >
          <stop offset="0%" stopColor="#968EC4" />
          <stop offset="100%" stopColor="#B58EC1" />
        </linearGradient>
        <linearGradient
          x1="100%"
          y1="50%"
          x2="0%"
          y2="50%"
          id="linearGradient-10"
        >
          <stop offset="0%" stopColor="#E2768D" />
          <stop offset="100%" stopColor="#CD8CBD" />
        </linearGradient>
      </defs>
      <g
        id="Page-1"
        stroke="none"
        fill="none"
        strokeWidth="1"
        fillRule="evenodd"
      >
        <g id="Home" transform="translate(-202.000000, -28.000000)">
          <g id="Photos" transform="translate(202.000000, 28.000000)">
            <text
              fill={color}
              fontFamily="Helvetica"
              fontSize="12"
              fontWeight="normal"
            >
              <tspan x="10" y="75">
                Photos
              </tspan>
            </text>
            <g id="Photos-icon">
              <g id="Photos-Icon">
                <mask id="mask-2" fill={color}>
                  <use />
                </mask>
                <use id="Mask" fill={color} />
                <rect
                  id="Red"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  transform="translate(20.318912, 20.318912) rotate(-45.000000) translate(-20.318912, -20.318912) "
                  x="12.3189123"
                  y="8.06891232"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Orange"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  x="22"
                  y="4"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Yellow"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  transform="translate(39.818912, 20.318912) scale(-1, 1) rotate(-45.000000) translate(-39.818912, -20.318912) "
                  x="31.8189123"
                  y="8.06891232"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Green"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  x="31.5"
                  y="22"
                  width="24.5"
                  height="16"
                  rx="8"
                />
                <rect
                  id="Turquoise"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  transform="translate(39.818912, 39.818912) scale(-1, -1) rotate(-45.000000) translate(-39.818912, -39.818912) "
                  x="31.8189123"
                  y="27.5689123"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Blue"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  x="22"
                  y="31.5"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Purple"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  transform="translate(20.318912, 39.818912) scale(1, -1) rotate(-45.000000) translate(-20.318912, -39.818912) "
                  x="12.3189123"
                  y="27.5689123"
                  width="16"
                  height="24.5"
                  rx="8"
                />
                <rect
                  id="Pink"
                  fill={color}
                  style={{
                    mixBlendMode: "multiply"
                  }}
                  mask="url(#mask-2)"
                  x="4"
                  y="22"
                  width="24.5"
                  height="16"
                  rx="8"
                />
              </g>
            </g>
          </g>
        </g>
      </g>
    </svg>
  );
};

IconPhotos.propTypes = {
  color: PropTypes.string,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
